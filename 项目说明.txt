
自动部署linux上的java环境
这是一个开源的项目，项目相关说明如下：
1.采用ubuntu14.4-麒麟版本，编写shell脚本。
2.实现脚本运行即可自动配置java环境，不需要人为操作（尽量做到最少）
3.出现问题做出友好提示，并做成相关工作流，即出现问题roolback。
4.此项目主要学习linux命令以及GitHub的使用，欢迎大家一起coding！
                                                                      -- write by vic

关于以上说明实现方式的思考
写在前面：
  关于java环境的部署，根据以往部署经验，可分为apt-get方式，或者bin/rpm包方式。
  环境可分为仅jre或者jre+jdk方式。
  因此产生以下想法，可以认为是脚本流程。
  个人理解，水平有限，仅供参考，欢迎指正。
想法一（apt-get方式，不建议使用）：
  1.检测当前计算机中是否存在java环境，能想到的方法是利用管道将java -version命令的输出重定向并分析其输出。
    不知道能不能用此方式实现环境检测，此方法还需要进一步论证。
  2.执行apt-get install default-jre。
    涉及到执行权限，需要检测当前权限，如果可以，在脚本运行sudo -sH获取root权限
    因为属于在线安装方式，如果网络连接不可用或apt源不存在此软件包，给出相应提示。
    如果做不到检测网络连接，可以统一在第三步的检测中归为部署环境失败，并给出几种失败可能性
  3.执行命令完成后，执行echo $JAVA_HOME、echo $PATH、echo $CLASSPATH、java -version命令中的一个或者多个。
    检测环境是否部署成功。
想法二（bin/rpm包的安装方式）：
  1.检测当前是否存在java环境。方法同上
  2.输出安装jdk+jre还是仅安装jre，让用户选择。
    如果不这么做，可以写多个脚本，jdk+jre的安装脚本和仅jre安装的脚本。
  3.输出安装的版本，如1.6、1.7或1.8，让用户选择。
  4.检测当前目录中是否存在指定版本的软件包，此处涉及到如何检测某文件存在并确定是否jdk软件包。
    可以将安装包直接和脚本放在一个文件夹里面进行打包。
    如果不这么做，就连接网络，写一个版本和软件包下载路径的配置文件（或将下载路径写死在脚本中），利用wget 路径命令将软件包down下来
  5.使用chmod +x 文件名命令，将bin文件添加可执行权限，并执行（涉及到文件名的定位）。
  6.执行bin后会解压生成rpm包，执行rpm -ivh进行安装。
  7.检测环境是否部署成功。方法同上

参考资料：http://www.cnblogs.com/caosiyang/archive/2013/03/14/2959087.html

以上，仅仅是想法而已，可行性有待考证。
                                                                      -- by 小熊 2014/8/26 22:19
                                                    
